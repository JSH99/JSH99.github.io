{"componentChunkName":"component---src-templates-blog-template-js","path":"/JavaScript/variable/","result":{"data":{"cur":{"id":"82731e0a-28d1-595b-b827-fd7ce3f4716a","html":"<h2 id=\"변수\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98\" aria-label=\"변수 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수</h2>\n<br>\n<h3 id=\"let\" style=\"position:relative;\"><a href=\"#let\" aria-label=\"let permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>let</h3>\n<p>잠깐 동안 특정 값을 저장해야 할 때 사용하는 것이 <strong>변수</strong>이다. ’<strong>let 변수명</strong>‘의 형태로 변수를 선언하고, 변수를 선언함과 동시에 값을 대입하는 것을 <strong>초기화</strong>라고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> word<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변수 선언</span>\n<span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변수 초기화</span>\nnum <span class=\"token operator\">=</span> <span class=\"token number\">6</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 변수 값 수정</span></code></pre></div>\n<br>\n<h3 id=\"var\" style=\"position:relative;\"><a href=\"#var\" aria-label=\"var permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>var</h3>\n<p>var 또한 <strong>변수</strong>를 선언하는 예약어이며, ’<strong>var 변수명</strong>‘의 형태로 선언한다. let을 사용하여 같은 변수명을 다시 선언하면 오류가 나지만, var는 같은 변수명을 다시 선언하는 것이 가능하며 에약어를 변수명으로 사용할 수도 있다. 이렇듯 var의 난해한 특성 때문에 요즘은 거의 사용하지 않는다고 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> hello <span class=\"token operator\">=</span> <span class=\"token string\">'world'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">var</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 가능</span>\n<span class=\"token keyword\">let</span> <span class=\"token keyword\">undefined</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오류</span></code></pre></div>\n<br>\n<h3 id=\"const\" style=\"position:relative;\"><a href=\"#const\" aria-label=\"const permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>const</h3>\n<p>const는 <strong>상수</strong>를 선언하는 예약어이다. 값을 상수로 저장하면 다른 값을 대입하더라도 수정되지 않음이 보장되어 더 안전하다. 상수는 값을 변경할 수 없기 때문에 <strong>항상 초기화</strong>를 해주어야 한다. const로 선언한 객체에 새로운 값을 대입할 수는 없지만, 객체 내부의 값은 바꿀 수 있다. (ex. 배열)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> name<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 오류</span>\n<span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'sseo'</span><span class=\"token punctuation\">;</span> </code></pre></div>","excerpt":"변수 let 잠깐 동안 특정 값을 저장해야 할 때 사용하는 것이 변수이다. ’let 변수명‘의 형태로 변수를 선언하고, 변수를 선언함과 동시에 값을 대입하는 것을 초기화라고 한다. var var 또한 변수를 선언하는 예약어이며, ’var 변수명‘의 형태로 선언한다. let을 사용하여 같은 변수명을 다시 선언하면 오류가 나지만, var는 같은 변수명을 다시 선언하는 것이 가능하며 에약어를 변수명으로 사용할 수도 있다. 이렇듯 var의 난해한 특성 때문에 요즘은 거의 사용하지 않는다고 한다. const const는 상수를 선언하는 예약어이다. 값을 상수로 저장하면 다른 값을 대입하더라도 수정되지 않음이 보장되어 더 안전하다. 상수는 값을 변경할 수 없기 때문에 항상 초기화를 해주어야 한다. const로 선언한 객체에 새로운 값을 대입할 수는 없지만, 객체 내부의 값은 바꿀 수 있다. (ex. 배열)","frontmatter":{"date":"January 24, 2022","title":"javascript 변수","categories":"JS","author":"JSH99","emoji":"🍦"},"fields":{"slug":"/JavaScript/variable/"}},"next":{"id":"86fbeacb-4d30-5989-8852-e773836f9ad2","html":"<h2 id=\"자료형\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"자료형 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자료형</h2>\n<br>\n<h3 id=\"문자열\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4\" aria-label=\"문자열 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열</h3>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'Hello'</span> \n<span class=\"token string\">\"안녕\"</span> \n<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">줄바꿈 \n가능</span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<p>-<strong>typeof</strong><br>\n값의 자료형을 반환한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">typeof</span> <span class=\"token string\">\"문자열\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// &lt; \"string\"</span></code></pre></div>\n<p>-<strong>back slash</strong><br>\n역슬래시는 문자열에서 특수한 역할을 한다. 각각의 상황에 맞게 활용할 수 있어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'hello\\n world'</span> <span class=\"token comment\">// \\n 줄바꿈</span>\n<span class=\"token string\">'hello\\' world'</span> <span class=\"token comment\">// \\' 문자열 내에 '를 쓰고 싶을 때</span>\n<span class=\"token string\">'hello\\\\ world'</span> <span class=\"token comment\">// \\\\ 문자열 내에 \\를 쓰고 싶을 때</span></code></pre></div>\n<p>-<strong>연산</strong><br>\n문자열과 문자열은 연산이 가능하다. +, -, *, /, % 연산이 모두 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'딸기'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'바나나'</span>\n<span class=\"token comment\">// &lt; \"딸기바나나\"</span>\n\n<span class=\"token string\">'12'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'34'</span>\n<span class=\"token comment\">// &lt; \"1234\"</span></code></pre></div>\n<br>\n<h3 id=\"숫자\" style=\"position:relative;\"><a href=\"#%EC%88%AB%EC%9E%90\" aria-label=\"숫자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>숫자</h3>\n<p>-<strong>NaN</strong>은 <strong>Not a Number</strong>라는 의미로, 숫자가 아니라는 의미로 쓰이는 <strong><em>숫자</em></strong>이다.  NaN의 자료형은 <strong>숫자</strong>이다.  </p>\n<p>-<strong>연산</strong><br>\n<strong>parseInt</strong>와 <strong>Number</strong>는 문자열을 숫자로 변환하여 사용하고 싶을 때 사용한다. 숫자와 문자열을 연산하게 되면 숫자가 문자열로 <strong>형 변환</strong>된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token string\">'12'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'34'</span> <span class=\"token comment\">// '1234'</span>\n<span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">34</span> <span class=\"token comment\">// 46</span>\n<span class=\"token function\">Number</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">34</span> <span class=\"token comment\">// 46 </span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">1</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span> <span class=\"token comment\">// 덧셈</span>\n<span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">2</span> <span class=\"token comment\">// 뺄셈</span>\n<span class=\"token number\">5</span> <span class=\"token operator\">*</span> <span class=\"token number\">5</span> <span class=\"token comment\">// 곱셈</span>\n<span class=\"token number\">10</span> <span class=\"token operator\">/</span> <span class=\"token number\">3</span> <span class=\"token comment\">// 나눗셈</span>\n<span class=\"token number\">6</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token comment\">// 나머지</span>\n<span class=\"token number\">3</span> <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token comment\">// 제곱</span></code></pre></div>\n<p>-<strong>연산자 우선순위</strong></p>\n<table>\n<thead>\n<tr>\n<th>우선순위</th>\n<th>연산자</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>20</td>\n<td>()(그룹화)</td>\n</tr>\n<tr>\n<td>19</td>\n<td>., [], new, ()함수 호출</td>\n</tr>\n<tr>\n<td>18</td>\n<td>new(인수 없이)</td>\n</tr>\n<tr>\n<td>17</td>\n<td>++(후위), —(후위)</td>\n</tr>\n<tr>\n<td>16</td>\n<td>!, ~, +(단항), -(단항), ++(전위), —(전위), typeof, void, delete, await</td>\n</tr>\n<tr>\n<td>15</td>\n<td>**</td>\n</tr>\n<tr>\n<td>14</td>\n<td>*, /, %</td>\n</tr>\n<tr>\n<td>13</td>\n<td>+(다항), -(다항)</td>\n</tr>\n<tr>\n<td>12</td>\n<td>&#x3C;&#x3C;. >>, >>></td>\n</tr>\n<tr>\n<td>11</td>\n<td>&#x3C;, &#x3C;=, >, >=, in, instanceof</td>\n</tr>\n<tr>\n<td>10</td>\n<td>==, !=, ===, !==</td>\n</tr>\n<tr>\n<td>9</td>\n<td>&#x26;</td>\n</tr>\n<tr>\n<td>8</td>\n<td>^</td>\n</tr>\n<tr>\n<td>7</td>\n<td></td>\n</tr>\n<tr>\n<td>6</td>\n<td>&#x26;&#x26;</td>\n</tr>\n<tr>\n<td>5</td>\n<td></td>\n</tr>\n<tr>\n<td>4</td>\n<td>? :</td>\n</tr>\n<tr>\n<td>3</td>\n<td>=, +=, -=, **=, *=, /=, %=, &#x3C;&#x3C;=, >>=, >>>=, &#x26;=, ^=,</td>\n</tr>\n<tr>\n<td>2</td>\n<td>yield, yield*</td>\n</tr>\n<tr>\n<td>1</td>\n<td>,</td>\n</tr>\n</tbody>\n</table>\n<p>-<strong>부동소수점</strong><br>\n컴퓨터는 큰 범위의 숫자까지 표현하기 위해 부동 소수점 방식으로 실수를 표현한다. 하지만 부동 소수점 방식을 사용할 경우 <strong>오차가 존재한다는 문제</strong>가 있다. 이것은 자바스크립트 뿐만 아니라 모든 프로그래밍 언어에서 나타나는 오류이다.<br>\n<br></p>\n<h3 id=\"불-값\" style=\"position:relative;\"><a href=\"#%EB%B6%88-%EA%B0%92\" aria-label=\"불 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>불 값</h3>\n<p>-참은 true, 거짓은 false를 나타내는 논리 값이다.</p>\n<p>-<strong>연산</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">3</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">5</span> <span class=\"token comment\">// true</span>\n<span class=\"token number\">6</span> <span class=\"token operator\">==</span> <span class=\"token number\">8</span> <span class=\"token comment\">// false</span>\n<span class=\"token number\">NaN</span> <span class=\"token operator\">==</span> <span class=\"token number\">NaN</span> <span class=\"token comment\">// false</span>\n<span class=\"token string\">'1'</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token comment\">// true (값만 비교 &lt;- 형 변환)</span>\n<span class=\"token string\">'1'</span> <span class=\"token operator\">===</span> <span class=\"token number\">1</span> <span class=\"token comment\">// flase (값과 자료형이 같은지 비교)</span></code></pre></div>\n<p>-<strong>논리 연산자</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token punctuation\">(</span><span class=\"token number\">6</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">8</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\">// true (AND)</span>\n<span class=\"token punctuation\">(</span><span class=\"token number\">10</span> <span class=\"token operator\">></span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> <span class=\"token punctuation\">(</span><span class=\"token number\">6</span> <span class=\"token operator\">></span> <span class=\"token number\">8</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\">// false (OR)</span>\n<span class=\"token operator\">!</span><span class=\"token boolean\">true</span> <span class=\"token comment\">// flase (NOT)</span></code></pre></div>\n<p>-<strong>형 변환</strong><br>\n<strong>!! 연산자</strong>를 사용하면 boolean으로 형 변환이 되는데,  boolean으로 형 변환했을 때 false가 되는 값들이 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token boolean\">false</span> <span class=\"token comment\">// false</span>\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token string\">''</span> <span class=\"token comment\">// false</span>\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token number\">0</span> <span class=\"token comment\">// false</span>\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token number\">NaN</span> <span class=\"token comment\">// false</span>\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token keyword\">undefined</span> <span class=\"token comment\">// false</span>\n<span class=\"token operator\">!</span><span class=\"token operator\">!</span><span class=\"token keyword\">null</span> <span class=\"token comment\">// false</span></code></pre></div>\n<br>\n<h3 id=\"빈-값\" style=\"position:relative;\"><a href=\"#%EB%B9%88-%EA%B0%92\" aria-label=\"빈 값 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>빈 값</h3>\n<p>-<strong>undefined</strong><br>\n<strong>반환할 결과 값이 없을 때</strong> undefined가 반환된다.</p>\n<p>-<strong>null</strong><br>\n<strong>빈 값</strong>을 의미한다. undifined와 null은 둘 다 빈 값이지만 다른 자료형이다.  </p>","frontmatter":{"date":"January 19, 2022","title":"javascript 자료형","categories":"JS","author":"JSH99","emoji":"🍦"},"fields":{"slug":"/JavaScript/data_type/"}},"prev":{"id":"1e1bb1e7-da18-593d-8302-f9ec8b85c770","html":"<h2 id=\"조건문\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%AC%B8\" aria-label=\"조건문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건문</h2>\n<br>\n<h3 id=\"if문\" style=\"position:relative;\"><a href=\"#if%EB%AC%B8\" aria-label=\"if문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>if문</h3>\n<p><strong>if</strong>는 조건식의 값이 참이면 동작문을 실행하고, 거짓이면 실행하지 않는다. ’<strong>if (조건식) 동작문;</strong>‘의 형태로 작성하며, 동작문이 하나 이상이면 동작문들을 {}로 감싼다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'world'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<p><strong>else if</strong>를 if문 뒤에 사용하여 또 다른 조건식과 동작문을 추가하면 여러 분기로 나눌 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">80</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  grade <span class=\"token operator\">=</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">60</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  grade <span class=\"token operator\">=</span> <span class=\"token string\">'B'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  grade <span class=\"token operator\">=</span> <span class=\"token string\">'C'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>score <span class=\"token operator\">>=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  grade <span class=\"token operator\">=</span> <span class=\"token string\">'D'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  grade <span class=\"token operator\">=</span> <span class=\"token string\">'F'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<p><strong>중첩</strong>을 사용하여 조건문의 중괄호 안에 다른 조건문을 쓸 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1번'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>second<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2번'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span> </code></pre></div>\n<br>\n<h3 id=\"switch문\" style=\"position:relative;\"><a href=\"#switch%EB%AC%B8\" aria-label=\"switch문 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>switch문</h3>\n<p><strong>switch</strong>는 조건식을 두 개 사용하여 <strong>case</strong>별로 동작문을 실행하는 조건문이다. ‘<strong>switch (조건식) { case 비교조건식: 동작문;}</strong>‘의 형태로 작성하며, 보통 조건식에는 변수를 넣고 비교 조건식에는 변수와 비교할 값을 넣는다. 앞의 비교 조건식에 해당되면 해당 case의 동작문만 실행되는 것이 아니라, 아래의 case의 동작문도 모두 실행된다. 따라서 이 특성을 기억하여 실행하고 싶은 case에 break를 사용하여 활용할 수 있어야 한다. 어느 case에도 해당되지 않을 때는 <strong>default</strong>를 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">case</span> <span class=\"token string\">'A'</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'A입니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token string\">'B'</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'B입니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">case</span> <span class=\"token string\">'C'</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'C입니다.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">default</span><span class=\"token operator\">:</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'일치하는 것 없음.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br>\n<h3 id=\"조건부-연산자\" style=\"position:relative;\"><a href=\"#%EC%A1%B0%EA%B1%B4%EB%B6%80-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"조건부 연산자 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>조건부 연산자</h3>\n<p><strong>조건부 연산자</strong>(<strong>삼항 연산자</strong>)는 ‘<strong>조건식 ? 참일 때 실행되는 식 : 거짓일 때 실행되는 식</strong>’의 형태로 간단하게 분기 처리를 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token number\">5</span> <span class=\"token operator\">></span> <span class=\"token number\">6</span> <span class=\"token operator\">?</span> <span class=\"token string\">'참!'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'거짓!'</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// > 거짓!</span>\nage <span class=\"token operator\">>=</span> <span class=\"token number\">19</span> <span class=\"token operator\">?</span> <span class=\"token string\">'성인입니다.'</span> <span class=\"token operator\">:</span> <span class=\"token string\">'미성년자입니다.'</span><span class=\"token punctuation\">;</span> </code></pre></div>","frontmatter":{"date":"February 03, 2022","title":"javascript 조건문","categories":"JS","author":"JSH99","emoji":"🍦"},"fields":{"slug":"/JavaScript/conditional_statement/"}},"site":{"siteMetadata":{"siteUrl":"https://www.jsh99.com","comments":{"utterances":{"repo":""}}}}},"pageContext":{"slug":"/JavaScript/variable/","nextSlug":"/JavaScript/data_type/","prevSlug":"/JavaScript/conditional_statement/"}},"staticQueryHashes":["1073350324","2938748437"]}