{"componentChunkName":"component---src-templates-category-template-js","path":"/posts","result":{"pageContext":{"currentCategory":"All","categories":["All","JS","Diary","Git","Gatsby"],"edges":[{"node":{"id":"6cd8a979-711f-5b56-a520-2406b27321c9","excerpt":"반복문 while문 while은 조건식이 참인 동안 반복해서 동작문을 실행한다. ‘while (조건식) 동작문;‘의 형태로 작성하며 동작문이 여러 줄일 경우 {}로 감싼다. while문을 사용할 때는 무한 반복이 되지 않도록 주의해야 한다. for문 for은 ‘for (시작; 조건식; 종료식) 동작문;’의 형태로 작성한다. 시작은 처음 한 번만 실행되고, 조건식, 동작문, 종료식 순서대로 반복되어 실행된다. 중첩을 사용하여 반복문의 중괄호 안에 다른 반복문을 쓸 수 있다. continue & break문 continue&break을 사용하면 특정 조건에서 실행되거나 반복문을 멈출 수 있다.","fields":{"slug":"/JavaScript/loop_statement/"},"frontmatter":{"categories":"JS","title":"javascript 반복문","date":"February 08, 2022"}},"next":{"fields":{"slug":"/Diary/macbook_unboxing/"}},"previous":null},{"node":{"id":"6c01ed93-6121-5b39-a809-549bac9c866b","excerpt":"Macbook Pro 14inches unboxing 구매 동기 꺄아아아ㅏ아아 드디어 내가 맥북을 사다니 소리 벗고 팬티 질러..!! 사실 맥북을 구입하기 전까지 나한테 맥북은 디자인이 예쁜 노트북, 스타벅스 직장인 노트북 정도의 인식이었다. 내가 앱등이라지만 맥북까지 사게 될 일은 딱히 없을 거라고 생각했었다. (아이폰, 에어팟, 아이패드 정도는 다들 있잖아..?) 사실 어떻게 생각해보면 인공지능학과 다니면서 목만 잘 꺾이는 문서 작업용 노트북을 쓴 게 더 미스테리인 것 같기도 하고… 🤔 개발자가 될 거라고 생각 못 했던 시절 바라만 보던 맥북을,, 드디어 내가 사게 되었다..!!! 개발을 하면서 성능 차이를 정말 많이 느꼈고, 윈도우 기반 노트북의 한계점을 온 몸으로 깨닫던 중이라 너무 반갑고 설렜다. 처음에는 렘 추가, SSD 추가 한 에어를 살까 고민했지만, 이왕 사는 거 더 좋은 거를 사자는 마음에 덜컥 맥북 프로 m1 14인치를 지르게 된 것이다. (아빠 내가 돈 많이 …","fields":{"slug":"/Diary/macbook_unboxing/"},"frontmatter":{"categories":"Diary","title":"MacBook Pro 언박싱 후기","date":"February 05, 2022"}},"next":{"fields":{"slug":"/JavaScript/conditional_statement/"}},"previous":{"fields":{"slug":"/JavaScript/loop_statement/"}}},{"node":{"id":"0e93b532-5c36-5b6c-8021-7b3354073d1d","excerpt":"조건문 if문 if는 조건식의 값이 참이면 동작문을 실행하고, 거짓이면 실행하지 않는다. ’if (조건식) 동작문;‘의 형태로 작성하며, 동작문이 하나 이상이면 동작문들을 {}로 감싼다. else if를 if문 뒤에 사용하여 또 다른 조건식과 동작문을 추가하면 여러 분기로 나눌 수 있다. 중첩을 사용하여 조건문의 중괄호 안에 다른 조건문을 쓸 수 있다. switch문 switch는 조건식을 두 개 사용하여 case별로 동작문을 실행하는 조건문이다. ‘switch (조건식) { case 비교조건식: 동작문;}‘의 형태로 작성하며, 보통 조건식에는 변수를 넣고 비교 조건식에는 변수와 비교할 값을 넣는다. 앞의 비교 조건식에 해당되면 해당 case의 동작문만 실행되는 것이 아니라, 아래의 case의 동작문도 모두 실행된다. 따라서 이 특성을 기억하여 실행하고 싶은 case에 break를 사용하여 활용할 수 있어야 한다. 어느 case에도 해당되지 않을 때는 default를 사용한다. 조…","fields":{"slug":"/JavaScript/conditional_statement/"},"frontmatter":{"categories":"JS","title":"javascript 조건문","date":"February 03, 2022"}},"next":{"fields":{"slug":"/JavaScript/variable/"}},"previous":{"fields":{"slug":"/Diary/macbook_unboxing/"}}},{"node":{"id":"5bf6c1ce-ca9e-5e71-86bd-1c287d11be7c","excerpt":"변수 let 잠깐 동안 특정 값을 저장해야 할 때 사용하는 것이 변수이다. ’let 변수명‘의 형태로 변수를 선언하고, 변수를 선언함과 동시에 값을 대입하는 것을 초기화라고 한다. var var 또한 변수를 선언하는 예약어이며, ’var 변수명‘의 형태로 선언한다. let을 사용하여 같은 변수명을 다시 선언하면 오류가 나지만, var는 같은 변수명을 다시 선언하는 것이 가능하며 에약어를 변수명으로 사용할 수도 있다. 이렇듯 var의 난해한 특성 때문에 요즘은 거의 사용하지 않는다고 한다. const const는 상수를 선언하는 예약어이다. 값을 상수로 저장하면 다른 값을 대입하더라도 수정되지 않음이 보장되어 더 안전하다. 상수는 값을 변경할 수 없기 때문에 항상 초기화를 해주어야 한다. const로 선언한 객체에 새로운 값을 대입할 수는 없지만, 객체 내부의 값은 바꿀 수 있다. (ex. 배열)","fields":{"slug":"/JavaScript/variable/"},"frontmatter":{"categories":"JS","title":"javascript 변수","date":"January 24, 2022"}},"next":{"fields":{"slug":"/JavaScript/data_type/"}},"previous":{"fields":{"slug":"/JavaScript/conditional_statement/"}}},{"node":{"id":"4785c014-2a83-50cc-bdbd-2973707b481d","excerpt":"자료형 문자열 -typeof 값의 자료형을 반환한다. -back slash 역슬래시는 문자열에서 특수한 역할을 한다. 각각의 상황에 맞게 활용할 수 있어야 한다. -연산 문자열과 문자열은 연산이 가능하다. +, -, *, /, % 연산이 모두 가능하다. 숫자 -NaN은 Not a Number라는 의미로, 숫자가 아니라는 의미로 쓰이는 숫자이다.  NaN의 자료형은 숫자이다.   -연산 parseInt와 Number는 문자열을 숫자로 변환하여 사용하고 싶을 때 사용한다. 숫자와 문자열을 연산하게 되면 숫자가 문자열로 형 변환된다. -연산자 우선순위 우선순위 연산자 20 ()(그룹화) 19 ., [], new, ()함수 호출 18 new(인수 없이) 17 ++(후위), —(후위) 16 !, ~, +(단항), -(단항), ++(전위), —(전위), typeof, void, delete, await 15 ** 14 *, /, % 13 +(다항), -(다항) 12 <<. >>, >>> 11…","fields":{"slug":"/JavaScript/data_type/"},"frontmatter":{"categories":"JS","title":"javascript 자료형","date":"January 19, 2022"}},"next":{"fields":{"slug":"/JavaScript/basic_rules/"}},"previous":{"fields":{"slug":"/JavaScript/variable/"}}},{"node":{"id":"82875793-511a-5e7c-9bba-d38fc665fb1b","excerpt":"javascript 기본 규칙 개발 블로그를 열심히 써야지!라는 다짐을 하자마자 수업 과제 시험의 반복… 종강도 했으니 이제 정말 열심히 채워나가야겠다는 마음에 조금은 설렌다..ㅎㅎ 기초부터 탄탄히 채우기 위해 기본 규칙부터 시작해서 앞으로 차근차근 공부한 걸 정리하려고 한다! 이번에는 정말 작심삼일이 아니길 바라며..\n 세미콜론 세미콜론은 하나의 명령이 끝났다는 의미로서, 붙이지 않아도 되지만 일부 명령에서 에러가 발생하는 경우도 있다. 에러 발생을 방지하고, 명확하고 통일성 있는 코드를 위해 자바스크립트에서는 세미콜론을 붙이는 것을 권장한다. 주석 주석은 코드가 아닌 설명을 의미한다. 다른 사람과 코드에 대해 의사소통을 하기 위해 꼭 필요한 것 중 하나로서, 주석으로 자세한 설명을 작성하거나 임시로 사용하지 않는 코드를 작성한다. 들여쓰기 들여쓰기는 코드를 실행할 때는 아무런 영향을 미치지 않지만, 코드를 보기 좋게 2칸 혹은 4칸으로 통일하여 들여쓰기를 해주는 것이 좋다. 공…","fields":{"slug":"/JavaScript/basic_rules/"},"frontmatter":{"categories":"JS","title":"javascript 기본 규칙","date":"January 16, 2022"}},"next":{"fields":{"slug":"/Git/deploy_error/"}},"previous":{"fields":{"slug":"/JavaScript/data_type/"}}},{"node":{"id":"559e3ecb-1fb6-5066-ad73-78b3a488d4fb","excerpt":"npm run deploy 오류 해결 1일 1커밋을 목표로 하자고 포부를 밝혔으나.. introducion post를 수정하고 commit, push, merge까지 다 잘 된 것을 확인 했는데 deploy가 되지 않아 당황했다.      다음과 같은 오류가 떴다. 에러 메세지를 읽어봐도 무슨 말인지 모르겠고.. 뭐지 하고 한참을 찾아봤는데..\nWindow VS code 터미널에서 git으로 배포할 때 powershell이 아닌 bash에서 해야 하는 거였다!!      처음 Gatsby blog를 만들고 배포할 때도 같은 부분에서 한참 헤맸는데 이걸 또 헤매다니.. 다시는 배포할 때 실수하지 말자는 의미에서 글로 남겨 기억해야겠다.      짜잔 ٩( ˃́▿˂̀ )۶  published가 잘 된 것을 확인했다. Mac에서는 이런 번거로움이 없다고 하는데.. 문득 Mac이 부러워지는 에러였다.","fields":{"slug":"/Git/deploy_error/"},"frontmatter":{"categories":"Git","title":"npm run deploy 오류 해결","date":"October 02, 2021"}},"next":{"fields":{"slug":"/introdution/"}},"previous":{"fields":{"slug":"/JavaScript/basic_rules/"}}},{"node":{"id":"5cbe4efb-005f-5066-b7a7-a2c9608b8494","excerpt":"앞으로 Gatsby Blog에 개발 관련 글을 올리려고 한다. 어렵겠지만 1일 1커밋을 목표로! ✧(۶•̀ᴗ•́)۶","fields":{"slug":"/introdution/"},"frontmatter":{"categories":"Gatsby","title":"Gatsby 시작!","date":"September 26, 2021"}},"next":null,"previous":{"fields":{"slug":"/Git/deploy_error/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}