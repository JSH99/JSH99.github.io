{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/UMC","result":{"pageContext":{"currentCategory":"UMC","categories":["All","UMC","JS","Diary","Git","Gatsby"],"edges":[{"node":{"id":"72f8d662-da1f-54b2-a2b3-da013bb6432f","excerpt":"UMC React Study 3주차  🎡리액트 라우팅(React Routing) 라우팅(Routing)이란, 사용자가 요청한 URL에 맞는 페이지를 보여주는 것이다. 리액트는 SPA 방식으로 렌더링하기 때문에 새로운 페이지를 로드하지 않고 하나의 페이지 안에서 필요한 데이터만 가져오는 형태로 동작한다.\n은 신규 페이지를 불러오지 않는 상황에서 각각의 URL에 따라 선택된 데이터를 하나의 페이지에서 렌더링 해주는 라이브러리이다.    설치  주요 요소  : 라우팅에 포함시킬 페이지들은 모두  컴포넌트로 감싸줘야 한다.    :  컴포넌트는 여러 Route를 감싸서 그중 규칙이 일치하는 Route 단 하나만을 렌더링 시켜주는 역할을 한다.     : 모든 Route에 공통으로 들어가는 요소가 있다면,  밖으로 빼줘야 한다. (ex-Header.jsx)    :  태그의  속성에는 경로,  속성에는 해당 경로에 띄워줄 컴포넌트를 넣어준다.    : 특정 컴포넌트에 여러 경로를 매칭하고 …","fields":{"slug":"/UMC/React_W3/"},"frontmatter":{"categories":"UMC","title":"UMC React Study 3주차","date":"September 27, 2022"}},"next":{"fields":{"slug":"/Diary/20220708/"}},"previous":null},{"node":{"id":"36190d60-40d3-5778-856c-bef330005d79","excerpt":"UMC 2기 프로젝트 ⚛초기 설정⚛  프로젝트 시작👨‍👩‍👧‍👦 UMC 2기 팀 프로젝트가 시작되었다! 프로젝트 진행사항을 글로 남겨보는 경험이 도움이 된다는 말을 흘러가며 들어서 블로그에 주섬주섬 작성해본다,, 과연 프로젝트가 완성될 때까지 모든 단계를 꼼꼼하게 작성할 수 있을지는 모르겠지만 최대한 적어보려 한다.😂 우리 팀은 해커톤에 참여하지 않았지만, 해커톤을 시작으로 7월 1일부터 프로젝트가 시작되었다. 8월 20일까지 약 7주 동안의 시간이 주어졌다. 본격적인 개발이 시작된다면 아마 잠죽잠 모드가 예상된다···    팀 소개🖨 우리 팀 프로젝트 주제는 3D 모델링 리소스 중계 서비스이다! 쉽게 말하면 3D 프린트를 할 수 있는 리소스를 사용자가 판매·구매하는 서비스이다. 팀은 디자이너 1명, 웹 프론트엔드 3명, 백엔드 2명으로 구성되어 있다. 프로젝트 경험은 부족하지만 내가 프론트엔드 리더를 맡게 되었고, 그만큼 열정적으로 개발할 것이다.🔥   🛠      초기 설정🐣 생각보다 협…","fields":{"slug":"/UMC/MakeAnything_pre/"},"frontmatter":{"categories":"UMC","title":"UMC 2기 프로젝트 - 초기 설정","date":"July 13, 2022"}},"next":{"fields":{"slug":"/UMC/React_W2/"}},"previous":{"fields":{"slug":"/Diary/20220708/"}}},{"node":{"id":"56fafd3e-fab0-5d0a-a1c4-8fcbc5398c42","excerpt":"UMC React Study 2주차  🪝 Hooks Hook은 React 16.8에 새로 추가된 기능입니다. Hook은 class를 작성하지 않고도 state와 다른 React의 기능들을 사용할 수 있게 해줍니다.   클래스형 컴포넌트는 문법이 어렵고, 코드의 재사용성이 낮으며 축소가 어렵다. 이러한 클래스형 컴포넌트의 단점을 보완하기 위해 가 등장하였다. 하지만 함수형 컴포넌트에서는 클래스형 컴포넌트의 장점인 State나 Life Cycle Method을 다루는 기능을 사용하지 못한다. 이를 해결하기 위해 이 등장했다.   은 함수형 컴포넌트에서 state와 lifecycle 기능을 사용할 수 있게 해주는 함수이다. Hooks의 대표적인 기능인 와 를 살펴보도록 하자.     🧘🏻‍♀️ useState 지난 시간에 배웠던 가 컴포넌트의 외부 input 값이라면, 는 컴포넌트 내부 input 값이라고 할 수 있다.   함수형 컴포넌트는 리렌더링될 때 내부의 모든 코드가 재실행되기 때문에 …","fields":{"slug":"/UMC/React_W2/"},"frontmatter":{"categories":"UMC","title":"UMC React Study 2주차","date":"July 09, 2022"}},"next":{"fields":{"slug":"/Diary/202206/"}},"previous":{"fields":{"slug":"/UMC/MakeAnything_pre/"}}},{"node":{"id":"2a39bc7e-d71f-5274-9e4a-8c134719f9f2","excerpt":"UMC React Study 1주차  🌏 React의 탄생 배경 동일한 뷰에서 불필요하게 코드 반복하는 문제점 페이지 이동 시 새로고침이 발생하며 매번 데이터를 불러오는 문제점   →️ 기존의 웹에 이러한 문제점을 개선하기 위해  라는 라이브러리가 탄생하게 되었다.     🧩 React의 특징 Virtual DOM 우선 은 Document Object Model의 약자로서, HTML 문서에 접근하기 위한 인터페이스이다. DOM은 웹 페이지의 객체 지향 표현이며, 자바스크립트를 이용해 콘텐츠를 추가, 수정, 삭제하거나 이벤트를 처리할 수 있도록 한다.   은 가상 DOM을 의미하는데, virtual DOM을 이용하면 실제 DOM에 접근하여 조작하는 대신에 이를 추상화시킨 자바스크립트 객체를 구성하여 사용한다.   React에서 변한 데이터를 실제 DOM에 업데이트하는 과정은 다음과 같으며, 연산 횟수가 줄어들어 더 효율적으로 작업을 처리할 수 있다.      데이터가 업데이트 되면, …","fields":{"slug":"/UMC/React_W1/"},"frontmatter":{"categories":"UMC","title":"UMC React Study 1주차","date":"June 30, 2022"}},"next":{"fields":{"slug":"/Diary/202205/"}},"previous":{"fields":{"slug":"/Git/git_practice/"}}},{"node":{"id":"85934ef6-24cd-530b-aa2f-cdf42d0f8608","excerpt":"UMC 10주차 워크북 서버와의 협업 협업\n    → 개발 ( 프론트엔드 + 백엔드 ) 협업 시 어떤 가 필요할지 회의 → 의견 취합, 적극 의견 제시 API 및 데이터 없이 프론트 개발을 시작해야 하는 경우 대부분 → 디자인 시안대로 하는 것이 중요 API 명세서가 나올 때쯤 퍼블리싱 완료한 화면에 데이터 코드 작성   경청 및 수용, 의견 적극 제시, 책임감, 존중, 소통, 믿음, 역지사지•••    퍼블리싱 : HTML, CSS을 위주로 화면을 디자인대로 구현하는 작업. 동적인 데이터가 들어가는 곳이라면 더미 데이터를 사용하여 구현.    더미 데이터 : 가짜 데이터. 간단하게 JSON 파일을 만들어서 최소한의 데이터를 만들어 놓은 것. 더미 데이터를 만들어 보는 과정을 통해 데이터에 대해 고민해보고, 백엔드와의 소통이 수월해질 수 있다.    figma  UI 디자인 툴. 색상, 폰트 등 간략한 코드 및 정보 확인 가능(30% 정도 참고)    api 명세서  api 내용을…","fields":{"slug":"/UMC/W10_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 10주차 워크북","date":"June 01, 2022"}},"next":{"fields":{"slug":"/JavaScript/primitive_reference/"}},"previous":{"fields":{"slug":"/Diary/202205/"}}},{"node":{"id":"13e1b773-d1f5-5fcd-ab25-23714d0cb03f","excerpt":"UMC 9주차 워크북 라우팅(Routing) 이란 URI(또는 경로) 및 특정한 HTTP 요청 메소드(GET, POST 등)인 특정 엔드포인트에 대한 클라이언트 요청에 애플리케이션이 응답하는 방법을 결정하는 것을 말한다. 👉 https://expressjs.com/ko/starter/basic-routing.html  CRUD 는 데이터 처리 기능 4가지를 의미한다. HTTP 요청 메서드와 연결하면 다음과 같다. Create(생성) ⇒  Read(조회) ⇒  Update(갱신) ⇒  Delete(삭제) ⇒   HTTP 상태 코드(http status codes) 는 클라이언트가 보낸 HTTP 요청에 대한 서버의 응답 코드로, 상태 코드에 따라 요청의 성공/실패 여부를 판단한다.   1xx  : 요청을 받았으며 프로세스를 계속한다. 2xx  : 요청을 성공적으로 받았으며 인식했고 수용했다. 3xx  : 요청 완료를 위해 추가 작업 조치가 필요하다. 4xx  : 요청 문법이 잘못되었거…","fields":{"slug":"/UMC/W9_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 9주차 워크북","date":"May 20, 2022"}},"next":{"fields":{"slug":"/UMC/W8_workbook/"}},"previous":{"fields":{"slug":"/JavaScript/primitive_reference/"}}},{"node":{"id":"0b4650b5-234c-5407-86b1-1ef380e098d3","excerpt":"UMC 8주차 워크북 HTTP  = HyperText Transfer Protocol →  프론트와 서버 간의 데이터 통신 방법 중 하나    = HyperText Transfer Protocol Secure → HTTP + 보안     URL address HTTP Request Method  : 기존의 데이터를 접근해서 사용하는 메서드(read 기능)  : 기존 데이터에 새로운 데이터를 추가하는 메서드  : 기존의 데이터를 수정하는 메서드  : 데이터를 삭제하는 메서드     XML 👉 https://developer.mozilla.org/en-US/docs/Web/XML/XML_introduction    JSON 👉 https://developer.mozilla.org/ko/docs/Learn/JavaScript/Objects/JSON    데이터 통신 fetch 는 브라우저에서 제공해주는 메서드이므로 별도의 설치가 필요 없다.  Promise    async & await…","fields":{"slug":"/UMC/W8_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 8주차 워크북","date":"May 17, 2022"}},"next":{"fields":{"slug":"/UMC/W7_workbook/"}},"previous":{"fields":{"slug":"/UMC/W9_workbook/"}}},{"node":{"id":"3dd335dc-fde5-5249-8e6d-a7fdf9747cb0","excerpt":"UMC 7주차 워크북 동기 & 비동기  : 순서대로 일을 처리하는 방식  : 순서대로 일을 처리 하지 않고 빨리 처리할 수 있는 것들을 먼저 처리하는 방식          자바스크립트는 이지만, 비동기적으로 처리하기 위해 사용할 수 있는 함수가 이다. 1, 3, 4, 6, 8, 10은 동기적으로 먼저 처리되고, 5, 2, 9, 7은 동기적으로 처리가 된 후에 설정된 시간이 작은 것부터 순차적으로 비동기적으로 처리된다.    : 만료된 후 함수나 지정한 코드 조각을 실행하는 타이머를 설정한다.  : 타이머가 만료된 뒤 실행할 function  : 함수 대신 문자열을 지정하는 대체 구문 (optional) : 주어진 함수 또는 코드를 실행하기 전에 기다릴 밀리초 단위 시간 (optional) : function에 전달할 추가 매개변수      Callback (콜백함수)  : 함수 안에 인자로 들어가는 함수 (비동기적으로 사용될 수도 있고, 동기적으로 사용될 수도 있다.)   콜백함수…","fields":{"slug":"/UMC/W7_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 7주차 워크북","date":"May 16, 2022"}},"next":{"fields":{"slug":"/Diary/202204/"}},"previous":{"fields":{"slug":"/UMC/W8_workbook/"}}},{"node":{"id":"365a784e-c679-53fb-aeaa-f513d3a8d0a3","excerpt":"UMC 6주차 워크북 Local Storage 로그인 정보와 같이 계속 유지되어야 하는 데이터를 저장하기 위해 를 사용한다. 말 그대로 로컬 환경의 저장 공간에 정보를 저정하는 것이다. 개발자 도구를 통해 Application - Local Storage를 누르면 해당 페이지에서 로컬 스토리지에 저장되고 있는 정보 목록을 확인할 수 있고, Key - Value 형태로 저장된다.      Local Storage가 사용되는 기능 중요 CSS 저장용 웹페이지간 정보 전달(웹서버를 경유하지 않고 정보 로컬에 유지) Canvas나 이미지에 대한 임시 저장 기능(base64로 변환) 현재 읽은 글의 히스토리 저장(카운팅, 읽은글 표시 등으로 활용) 웹페이지의 개인화 설정들에 대한 저장과 제공(캐쉬로 활용) 웹서버에 필수적으로 접근해야 하는 캐쉬용(캐쉬로 먼저 서비스 제공, 차후에 업데이트) 글쓰기를 하다가 사용자가 창을 벗어난 경우 관련 작성하던 내용 백업/복구용 Sesstion Stora…","fields":{"slug":"/UMC/W6_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 6주차 워크북","date":"April 30, 2022"}},"next":{"fields":{"slug":"/UMC/W5_workbook/"}},"previous":{"fields":{"slug":"/Diary/202204/"}}},{"node":{"id":"8ef444a8-390a-5fba-ba6a-623a206ad8da","excerpt":"UMC 5주차 워크북 이벤트 핸들러(Event Handler) 콜백함수를 라고 한다. 이벤트 핸들러는 가독성 및 유지보수를 위해 따로 작성하는 것이 좋다. 함수 뒤에 호출 기호가 없는 이유는 콜백함수이기 때문이다. 콜백은 클릭이 이루어질 때마다 함수를 자동적으로 호출해준다.   이벤트 핸들러의 단점은 동일한 이벤트에 서로 다른 콜백함수를 지정할 경우 뒤의 이벤트 핸들러가 앞의 이벤트 핸들러를 덮어씌운다.      이벤트 리스너(Event Listner)  이벤트 핸들러와 다르게 동일한 이벤트에 서로 다른 콜백함수를 실행할 수 있다. addEventListener는 아래와 같이 사용할 수 있으며, 인자들은 다음과 같다. - type listener options useCapture 설명 수신할 이벤트 유형을 나타내는 대소문자 구분 문자열(이벤트명) 지정한 이벤트(이벤트 인터페이스를 구현한 객체)를 수신할 객체(콜백함수) 이벤트 수신기의 특징을 지정할 수 있는 객체(옵션) 이벤트 대상…","fields":{"slug":"/UMC/W5_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 5주차 워크북","date":"April 15, 2022"}},"next":{"fields":{"slug":"/UMC/W4_workbook/"}},"previous":{"fields":{"slug":"/UMC/W6_workbook/"}}},{"node":{"id":"906d6299-2989-58b3-bab3-b2e0f5abd1b0","excerpt":"UMC 4주차 워크북 document document = html. 개발자 도구를 켜서 console에 document를 입력하면 전체 선택되는 것을 확인할 수 있다. DOM을 선택한 변수는 다른 변수와 구분하기 위해 $ 표시를 하는데, 생략해도 무관하다.    DOM을 제어하는 것이 곧 HTML을 제어하는 것이다. 자바스크립트는 HTML의 DOM 객체를 가져와 조작할 수 있다. element를 가져오고, element의 텍스트를 읽고, element를 생성, 삭제, 수정할 수 있다. ➕참고 : https://grace-go.tistory.com/78\n   dom elements 가져오기  : 해당되는 태그를 모두 지정해서 유사 배열(HTMLCollection)에 넣는다. document가 아닌 dom을 선택한 변수를 선택하여 영역을 제한할 수 있다.  : 해당되는 클래스를 모두 지정해서 유사 배열(HTMLCollection)에 넣는다.  : 해당되는 id를 배열이 아닌 eleme…","fields":{"slug":"/UMC/W4_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 4주차 워크북","date":"April 12, 2022"}},"next":{"fields":{"slug":"/UMC/W3_workbook/"}},"previous":{"fields":{"slug":"/UMC/W5_workbook/"}}},{"node":{"id":"1a2c53a6-c2db-5761-ada0-210ddfb8485a","excerpt":"UMC 3주차 워크북 변수(Variable)  : 데이터를 저장하는 상자  : 변하지 않는 데이터 값 넣을 때 사용. 한 번 값을 할당하면 재할당 할 수 없다.  : 데이터 값이 변할 때 사용. 선언 : 변수를 정의하는 것   초기화 : 정의한 변수에 넣는 첫 번째 값 재할당 : 이미 값이 존재하는 변수에 다시 값을 넣는 것    자료형(Data type)  : 문자열  : 숫자  : 큰 값의 숫자  : true, false  : 중복되지 않는 고유값  : 비어있는 값. 수동적으로(의도적으로) 값이 없음을 나타낸다.  : 비어있는 값. 자동적으로 값이 없음을 나타낸다.  : 함수, 배열, 객체  연산자(Operator)  : +, -, /, *, %, **, ++, —  : =  : +, +=  : ==, ===(데이터 타입까지 비교), !=, !==, >, <, >=, <=  :  : 조건 중 하나라도 false이면 false  : 두 개의 조건이 모두 false여야 false …","fields":{"slug":"/UMC/W3_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 3주차 워크북","date":"April 10, 2022"}},"next":{"fields":{"slug":"/Diary/202203/"}},"previous":{"fields":{"slug":"/UMC/W4_workbook/"}}},{"node":{"id":"8a5c128e-b47f-5a60-8b08-9dc3ba5df618","excerpt":"UMC 2주차 워크북(2) CSS 속성(property) 태그는 컨텐츠 크기와 상관 없이 한 줄을 차지하는 태그인   요소와 컨텐츠 크기만큼 차지하는 태그인  요소가 있다. 너비와 높이를 지정해주는 width, height 속성은 block 요소만 사용 가능하다. inline 요소는 적용해도 변화가 없다. 이런 특성을 변경해주는 속성이 이다. block tag : p, div, ul, li, h1-h6 inline tag : span, a, img, button      : 요소를 사라지게 한다.  : block 요소를 inline 요소처럼 사용한다.  : inline 요소를 block 요소처럼 사용한다.  : inline과 block이 합쳐진 것으로, inline처럼 한 줄에 여러 요소들을 둘 수 있고 block처럼 width와 height를 지정할 수 있다.        : 요소의 테두리를 설정한다. , ,  값을 설정한다. (순서대로 작성 시 너비, 스타일, 색 순서로 작성)…","fields":{"slug":"/UMC/W2_workbook2/"},"frontmatter":{"categories":"UMC","title":"UMC 2주차 워크북(2)","date":"April 06, 2022"}},"next":{"fields":{"slug":"/UMC/W2_workbook1/"}},"previous":{"fields":{"slug":"/Diary/202203/"}}},{"node":{"id":"67a65a3d-6999-5f7c-b724-409ce0cdd00f","excerpt":"UMC 2주차 워크북(1) CSS html이 뼈대 역할을 했다면, 는 살(외관)의 역할이라고 할 수 있다. 의 줄임말로, 사용자에게 문서를 표시하는 방법을 지정하는 언어이다. 기본 텍스트 문서를 꾸며주는 역할을 한다.   html에서 외부 요소와 연결하는 를 사용하여 css를 외부 파일로 만든 후에 html과 연결할 수 있다.    CSS 선택자 CSS의 문법은 다음과 같다. 는 html 요소 선택하는 역할을 한다.  태그 : 를 선택한다.   클래스 : 태그와 상관없이 동일한 스타일을 에 주고 싶을 때 사용한다. 하나의 요소에 여러 개의 클래스를 사용할 수 있고(공백으로 구분), 중복일 경우 위에서 순차적으로 실행되기 때문에 마지막에 실행되는 코드로 적용된다.  예시: 영희 = 학생, 알바생, 안경 쓴 사람    id : 클래스는 동일한 클래스 이름을 여러 요소에 사용할 수 있었지만, id는 동일한 id 값을 가진 id가 있으면 안 되고 에만 사용해야 한다. 하나의 요소가 여러 …","fields":{"slug":"/UMC/W2_workbook1/"},"frontmatter":{"categories":"UMC","title":"UMC 2주차 워크북(1)","date":"April 04, 2022"}},"next":{"fields":{"slug":"/UMC/W1_workbook/"}},"previous":{"fields":{"slug":"/UMC/W2_workbook2/"}}},{"node":{"id":"44e9f5af-8edc-5788-ac50-87d118e8d7b0","excerpt":"UMC 1주차 워크북 Web 웹이란 무엇일까? 이란 의 줄임말으로서, 인터넷에 연결된 사용자들이 서로의 정보를 공유할 수 있는 공간을 의미한다. 인터넷 서비스의 일종이며, 전 세계적으로 많은 정보들이 오가는 공간이다.   웹의 역사 웹은 아이디어를 주고 받을 때 공통된 공간에 각자의 정보를 올리고 관리할 수 있는 정보 관리 시스템에서 시작되었으며, 1989년 팀 버스너리가 발명하였다.    Web의 특징 웹은 인터넷 상에서 텍스트, 이미지, 비디오 등 멀티미디어 정보를 하이텍스트 방식으로 연결하여 제공한다. 란, 문서 내부에 또 다른 문서로 연결되도록 하는 (다른 문서에 관한 참조 정보)를 사용하여 여러 문서를 연결하는 기술이다.    HTML tag 란 정보를 정의 하는 형식을 의미한다. plain text에 의미를 부여하기 위해 사용되며, 태그마다 지원하는 다양한 속성을 사용할 수 있다. 태그는 와 가 세트로 구성되어있으며, 닫는 태그가 없는 도 있다.   dom 은 의 줄임말…","fields":{"slug":"/UMC/W1_workbook/"},"frontmatter":{"categories":"UMC","title":"UMC 1주차 워크북","date":"April 01, 2022"}},"next":{"fields":{"slug":"/UMC/UMC_pass/"}},"previous":{"fields":{"slug":"/UMC/W2_workbook1/"}}},{"node":{"id":"982de9e4-af19-5d36-8b07-f77b8ff18181","excerpt":"UMC 2기 합격 후기  UMC⭐️ 👉UMC 홈페이지  https://makeus-challenge.oopy.io/umc 는 University Makeus Challenge의 약자인 이다. 디자이너, PM과 함께 협업하여 개발하고, 앱을 런칭하는 활동을 한다.   스터디, 해커톤, 팀 프로젝트까지 모든 과정을 6개월 동안 진행한다. 자세한 커리큘럼은 사진에서 확인 가능👇   \n 지원 동기🙌 과 단톡방에 UMC 홍보가 올라온 것을 보고 바로 1기 서비스 랜딩 페이지를 구경했다. 1기는 우리 학교가 없기도 했고, 안드로이드 파트만 있었어서 조금 고민되긴 했지만 나에게 좋은 기회가 될 것 같아서 지원했다.   작년에 교내 스터디를 하면서 협업을 조금이나마 경험해볼 수 있었는데, 그때 다른 사람들과 함께 개발하는 즐거움을 깨달아버렸다. 그래서 휴학한 동안 연합 동아리나 부트 캠프를 알아보고 있던 중이었는데 마침 운명처럼☄️ 나타난 UMC.   iOS, Android, Web, Node.js…","fields":{"slug":"/UMC/UMC_pass/"},"frontmatter":{"categories":"UMC","title":"UMC 2기 합격","date":"March 18, 2022"}},"next":{"fields":{"slug":"/Diary/information_processing_engineer_written/"}},"previous":{"fields":{"slug":"/UMC/W1_workbook/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}