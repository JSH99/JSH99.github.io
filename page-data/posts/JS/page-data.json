{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/JS","result":{"pageContext":{"currentCategory":"JS","categories":["All","JS","Git","Gatsby"],"edges":[{"node":{"id":"86fbeacb-4d30-5989-8852-e773836f9ad2","excerpt":"javascript 자료형 문자열 -typeof 값의 자료형을 반환한다. -back slash 역슬래시는 문자열에서 특수한 역할을 한다. 각각의 상황에 맞게 활용할 수 있어야 한다. -연산 문자열과 문자열은 연산이 가능하다. +, -, *, /, % 연산이 모두 가능하다. 숫자 -NaN은 Not a Number라는 의미로, 숫자가 아니라는 의미로 쓰이는 숫자이다.  NaN의 자료형은 숫자이다.   -연산 parseInt와 Number는 문자열을 숫자로 변환하여 사용하고 싶을 때 사용한다. 숫자와 문자열을 연산하게 되면 숫자가 문자열로 형 변환된다. -연산자 우선순위 우선순위 연산자 20 ()(그룹화) 19 ., [], new, ()함수 호출 18 new(인수 없이) 17 ++(후위), —(후위) 16 !, ~, +(단항), -(단항), ++(전위), —(전위), typeof, void, delete, await 15 ** 14 *, /, % 13 +(다항), -(다항) 12 <<.…","fields":{"slug":"/JavaScript/data_type/"},"frontmatter":{"categories":"JS","title":"javascript 자료형","date":"January 19, 2022"}},"next":{"fields":{"slug":"/JavaScript/basic_rules/"}},"previous":null},{"node":{"id":"d2f40074-d327-5dfc-81d6-2c50a80ec60a","excerpt":"javascript 기본 규칙 개발 블로그를 열심히 써야지!라는 다짐을 하자마자 수업 과제 시험의 반복… 종강도 했으니 이제 정말 열심히 채워나가야겠다는 마음에 조금은 설렌다..ㅎㅎ 기초부터 탄탄히 채우기 위해 기본 규칙부터 시작해서 앞으로 차근차근 공부한 걸 정리하려고 한다! 이번에는 정말 작심삼일이 아니길 바라며..\n 세미콜론 세미콜론은 하나의 명령이 끝났다는 의미로서, 붙이지 않아도 되지만 일부 명령에서 에러가 발생하는 경우도 있다. 에러 발생을 방지하고, 명확하고 통일성 있는 코드를 위해 자바스크립트에서는 세미콜론을 붙이는 것을 권장한다. 주석 주석은 코드가 아닌 설명을 의미한다. 다른 사람과 코드에 대해 의사소통을 하기 위해 꼭 필요한 것 중 하나로서, 주석으로 자세한 설명을 작성하거나 임시로 사용하지 않는 코드를 작성한다. 들여쓰기 들여쓰기는 코드를 실행할 때는 아무런 영향을 미치지 않지만, 코드를 보기 좋게 2칸 혹은 4칸으로 통일하여 들여쓰기를 해주는 것이 좋다. 공…","fields":{"slug":"/JavaScript/basic_rules/"},"frontmatter":{"categories":"JS","title":"javascript 기본 규칙","date":"January 16, 2022"}},"next":{"fields":{"slug":"/Git/deploy_error/"}},"previous":{"fields":{"slug":"/JavaScript/data_type/"}}}]}},"staticQueryHashes":["1073350324","2938748437"]}